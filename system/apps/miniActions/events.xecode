<?php
/*
##     ## ######## ##    ##  #######  ##    ##  #######   ######
 ##   ##  ##       ###   ## ##     ## ###   ## ##     ## ##    ##
  ## ##   ##       ####  ## ##     ## ####  ## ##     ## ##
   ###    ######   ## ## ## ##     ## ## ## ## ##     ##  ######
  ## ##   ##       ##  #### ##     ## ##  #### ##     ##       ##
 ##   ##  ##       ##   ### ##     ## ##   ### ##     ## ##    ##
##     ## ######## ##    ##  #######  ##    ##  #######   ######


XenonOS is a fork of the oneye project.
XenonOS Copyright © 2019 Trinity (touhouboi@protonmail.com)

Original Copyright
------------------------------------------
https://oneye-project.org
Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)

*/

function miniActions_on_Message($params) {
	eyeWidgets('updateContent', $params);
}

function miniActions_on_Close($params=null) {
	proc('end');
}


function miniActions_on_closeApp($params=null) {
	$config = um('getCurrentUserDir').'/'.CONF_USER_DIR.'/xenonDesk/conf.xml';
	$xml = xenonXML('getXMLfile',array($config));
	$autorun = $xml['xenonDesk'][0]['autolaunch'];
	if (in_array("miniActions",$autorun)) {
		xenonx('messageBox',array(
			'content' => 'Do you want this widget to open automatically on the next session?',
			'type' => 3,
			'title' => 'MiniActions',
			'win_name' => 'eyeActions_autoopen_window',
			'win_style' => TITLE + CLOSE,
			'win_removepid' => 0,
			'btn1_capt' => 'Yes',
			'btn1_name' => 'auto_yes',
			'btn2_capt' => 'No',
			'btn2_name' => 'auto_no',
			'father' => 'xenonApps',
			'img' => '?'
		));
	} else {
		eyeWidgets('unserialize');
		proc('end');
	}
}

function miniActions_on_auto_no($params=null) {
	$config = um('getCurrentUserDir').'/'.CONF_USER_DIR.'/xenonDesk/conf.xml';
	$xml = xenonXML('getXMLfile',array($config));
	$autorun = $xml['xenonDesk'][0]['autolaunch'];
	for($i=0;$i < count($autorun);$i++) {
		if($autorun[$i] == 'miniActions'){
			unset($xml['xenonDesk'][0]['autolaunch'][$i]);
		}
	}
	xenonXML('setXMLfile',array($config,$xml));
	eyeWidgets('unserialize');
	proc('end');
}

function miniActions_on_auto_yes($params=null) {
	eyeWidgets('unserialize');
	proc('end');
}

function miniActions_on_Launch1($params=null) {
	$checknum = proc('findChecknumByName',array('xenonDesk'));
	$path = um('getCurrentUserDir').'/'.FILES_USER_DIR.'/Desktop/';
	$callback = 'sendMsg('.$checknum.',"OpenPath","");';
	proc('launch', array('xenonUpload',array($path,$callback)));
}

function miniActions_on_Launch2($params=null) {
	proc('launch', array('xenonMessages'));
}

function miniActions_on_Launch3($params=null) {
	proc('launch', array('xenonDocs'));
}

function miniActions_on_Launch4($params=null) {
	proc('launch', array('xenonExcel'));
}

function miniActions_on_Launch($params=null) {
	$messagesPid = proc('findPidByName', array('xenonCalendar'));

	if($messagesPid == false) {
		proc('launch', array('xenonCalendar'));
	}
}


?>