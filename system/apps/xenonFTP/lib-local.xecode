<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

/*********************************************************************************************/
/*********************************************************************************************/
/*					LIB FUNCTIONS - LOCAL FILES VIEW										 */
/*********************************************************************************************/
/*********************************************************************************************/

/**
 * Removes all rows from the local files table
 */
function xenonFTP_emptyLocalFilesTable() {
	include_once(XENONOS_ROOT.'/'.APP_DIR.'/xenonFTP/app'.XE_CODE_EXTENSION);
	global $checknum, $myPid;
	if ($GLOBALS['xenonFTP_localFiles_TAB']) {
		$GLOBALS['xenonFTP_localFiles_TAB']->remove();
	}

	/* TABLE FOR LOCAL FILES LIST */
	$localFilesTable = new Sortabletable(array(
		'name' => 'xenonFTP_localFiles_TAB',
		'father' => 'xenonFTP_leftRight_SPLT_first',
		'x' => 0,
		'y' => 24,
		'width' => $GLOBALS['xenonFTP_leftRight_SPLT']->position - 15,
		'height' => $GLOBALS['xenonFTP_leftRight_SPLT']->height - 30,
		'sortypes' => array('Html','String','Number','Date','String','Hidden'),
		'master' => 5,
		'theader' => array(' ','Filename','Filesize (B)','Date','Author','id'),
		'signal' => 'xenonFTP_localFilesClick',
		'dblsignal' => 'xenonFTP_localFilesDblClick'
	));
	$localFilesTable->show();
	xenonx('addEvent',array(
		'name' => $myPid.'_xenonFTP_localFiles_TAB_Container',
		'action' => 'sendMsg('.$checknum.',"xenonFTP_localFilesClick","")',
		'event' => 'onclick',
		'args'=>''
	));
	$localFilesTable->setCss(array('white-space' => 'nowrap'));
	xenonFTP_setActiveView($GLOBALS['xenonFTP_selectedView_HID']->text);

	$GLOBALS['xenonFTP_serializedLocalFilesData_HID']->setText(serialize(array()));
	$GLOBALS['xenonFTP_localPath_TXTBOX']->setText("");
}

function xenonFTP_refreshLocal() {
	$conf = xenonFTP_getConf();
	xenonFTP_browseLocal($conf['currentLocalDir']);
}

/**
 * @param string $path The path within the user dir ('/', '/Documents', '/Desktop', etc.) to browse
 */
function xenonFTP_browseLocal($path = '/') {
	xenonFTP_emptyLocalFilesTable();

	$path = xenonFTP_resolvePathInUserDir($path);
	if ($path === false) {
		xenonFTP_logConsole('Error while trying to browse local folder!', null, xenonFTP_LOGSTYLE_ERROR);
		return;
	}

	$fullPath = xenonFTP_resolvePathInUserDir($path,false);
	$filesData = xenonFTP_listDir($fullPath);
	foreach($filesData as $id => $fileInfo) {
		switch($fileInfo['type']) {
			case 'd':
				$urlIcon = 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/16x16/folder.png';
				$size = ' ';
				break;

			case 'l':
				$urlIcon = 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/16x16/link.png';
				$size  = ' ';
				break;

			default:
				$urlIcon = 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/16x16/file.png';
				$size  = $fileInfo['size'];
		}
		$GLOBALS['xenonFTP_localFiles_TAB']->addRow(array(
			'<img src="'.$urlIcon.'" />',
			$fileInfo['displayedName'],
			$size,
			$fileInfo['date'],
			$fileInfo['author'],
			$id
		));
	}
	$GLOBALS['xenonFTP_serializedLocalFilesData_HID']->setText(serialize($filesData));
	$GLOBALS['xenonFTP_currentLocalDir_HID']->setText($path);

	//FIXME: unable to use setText(), otherwise causes an "undefined entity" error on special chars in browser
	//$GLOBALS['xenonFTP_path_TXTBOX']->setText($dir);
	global $myPid;
	xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_xenonFTP_localPath_TXTBOX").value=Base64.decode("'.base64_encode($path).'");'));
}

/**
 * @param string $dir The directory to browse (e.g. './users/jn4/john/files/Documents')
 * @return array
 */
function xenonFTP_listDir($dir,$addParent=true) {
	$dir = xenonFTP_getFormatedDirPath($dir);
	$content = vfs('getDirContent', array($dir));

	$i = 1;
	$filesData = array();

	if ($addParent) {
		//add parent entry (..) only if we are not in the root directory
		if (xenonFTP_resolvePathInUserDir($dir) != '/') {
			$fileInfo = array(
				'type'=>'d',
				'author'=>' ',
				'size'=>' ',
				'date'=>' ',
				'name'=>'..',
				'displayedName'=>'..',
				'path'=>''
			);
			$filesData[$i++] = $fileInfo;
		}
	}

	if (is_array($content)) {
		foreach($content as $file) {
			$fileInfo = vfs('readInfo', array($file));
			if (is_dir($file)) {
				$type = 'd';
				$author = ' ';
				$size = ' ';
				$date = ' ';
				$name = basename($file);
			}
			else if (ltrim(strrchr($file, '.'), '.') === XENONOS_LINK_EXT) { // utf8
				$type = 'l';
				$author = ' ';
				$size = ' ';
				$date = ' ';
				$name = basename($file);
			}
			else {
				$type = '-';
				$author = $fileInfo['eyeFile'][0]['author'][0];
				$size = vfs('filesize', array($file));
				$date = date('Y-m-d',$fileInfo['eyeFile'][0]['created'][0]);
				$name = $fileInfo['eyeFile'][0]['filename'][0];
			}
			$path = $dir.'/'.$name;

			$fileInfo = array(
				'type'=>$type,
				'author'=>$author,
				'size'=>$size,
				'date'=>$date,
				'name'=>$name,
				'displayedName'=>$name,
				'path'=>$path
			);
			$filesData[$i++] = $fileInfo;
		}
	}

	usort($filesData, 'xenonFTP_compareFilesData');
	$return = array();
	$i = 1;
	foreach($filesData as $fileData) {
		$return[$i++] = $fileData;
	}

	return $return;
}

/**
 * @param string $path The path of a FOLDER to resolve (do NOT pass a file)
 *                                         (e.g. '/Documents/Images/..',
 *                                           or  './users/jn4/john/files/Documents/Images/..',
 *                                           or  '/home/john/oneye/users/jn4/john/files/Documents/Images/..',
 *                                           or  'C:\My Documents\john\oneye\users\jn4\john\files\Documents\Images\..')
 * @param string $returnUserFilesRelative TRUE to get a resolved path in the user files folder (e.g. '/Documents')
 *                                        FALSE to get a resolved path from oneye root directory
 *                                              (e.g. ./users/jn4/john/files/Documents)
 * @return mixed The resolved path or FALSE if the given path is not in the user files directory
 */
function xenonFTP_resolvePathInUserDir($path,$returnUserFilesRelative = true) {
	return vfs('resolvePath', array($path, 'user_files', $returnUserFilesRelative));
}

?>