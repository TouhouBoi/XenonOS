<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function xenonFiles_com_onEvent($params = '') {
	global $checknum;
	global $myPid;
	xenonWidgets('updateContent');
	$path = xenonFiles('cleanPath',array($GLOBALS['xenonFiles_Hidden_Path']->text));
	$load = false;
	$trash = false;
	foreach ($params as $value) {
		$value = xenonFiles('cleanPath',array($value));
		if ($value[0] == $path[0] || $value[1] . '://' . $value[2] == $path[1] . '://' . $path[2]) {
			$load = true;
		}
		if ($value[1] == 'trash') {
			$trash = true;
		}
	}
	if ($load === true) {
		include_once(XENONOS_ROOT . '/' . APP_DIR . '/xenonFiles/events' . XE_CODE_EXTENSION);
		xenonFiles_on_OpenPath();
	}
	if ($trash === true) {
		if (count(vfs('getDirContent',array(um('getCurrentUserDir') . '/' . TRASH_USER_DIR . '/')))) {
			$full = '_full';
		}
		xenonx('rawjs',array('js' => 'e = xGetElementById("' . $myPid . '_xenonFiles_Toolbar");
for (var i = 0; i < e.childNodes.length; i++) {
	if (e.childNodes[i].id == "' . $myPid . '_Trash_Container") {
		e.childNodes[i].childNodes[0].src = "index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/trash' . $full . '.png";
	}
}'));
	}
}

function xenonFiles_com_fullResized($params = '') {
	xenonWidgets('updateContent',$params);
	if ($GLOBALS['xenonFiles_Window']->fullScreen) {
		$GLOBALS['xenonFiles_Window']->listenerResizeFullScreen($params);
	}
}
?>