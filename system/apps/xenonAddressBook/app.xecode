<?php
/*
##     ## ######## ##    ##  #######  ##    ##  #######   ######
 ##   ##  ##       ###   ## ##     ## ###   ## ##     ## ##    ##
  ## ##   ##       ####  ## ##     ## ####  ## ##     ## ##
   ###    ######   ## ## ## ##     ## ## ## ## ##     ##  ######
  ## ##   ##       ##  #### ##     ## ##  #### ##     ##       ##
 ##   ##  ##       ##   ### ##     ## ##   ### ##     ## ##    ##
##     ## ######## ##    ##  #######  ##    ##  #######   ######


XenonOS is a fork of the oneye project.
XenonOS Copyright © 2019 Trinity (touhouboi@protonmail.com)

Original Copyright
------------------------------------------
https://oneye-project.org
Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)

*/

require_once(XENONOS_ROOT.'/'.APP_DIR.'/xenonAddressBook/events'.XE_CODE_EXTENSION);

function xenonAddressBook_run($params=null) {
	global $myPid;
	global $checknum;
	
	$mainWindow = new Window(array(
		'name' => 'xenonAddressBook_WND',
		'title' => 'AddressBook',
		'father' => 'xenonApps',
		'width' => 690,
		'height' => 572,
		'cent' => 1,
		'type'=>NORMAL_WINDOW,
		'sendResizeMsg'=> 1,
		'sigResize'=> 'resize',
		'savePosition' => 1
	));
	$mainWindow->show();
	xenonx('rawjs',array('js' => 'xGetElementById("'.$myPid.'_xenonAddressBook_WND_Content").style.overflow = "hidden";'));
	$myToolbar = new Toolbar(array(
		'name'=>'xenonAddressBook_Toolbar',
		'father'=>'xenonAddressBook_WND_Content'
	));
	$myToolbar->show();
	$myToolbar->addItem('newContact','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/addcontact.png','New Contact');
	$myToolbar->addItem('listEditContact','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/editcontact.png','Edit');
	$myToolbar->addItem('delete','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/deletecontact.png','Delete');
	$myToolbar->addLine();
	$myToolbar->addItem('import','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/importcontact.png','Import');
	$myToolbar->addItem('export','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/exportcontact.png','Export');
	$myToolbar->addLine();
	$myToolbar->addItem('sendMessage','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/sendmessage.png','Send Message');
	$myToolbar->addLine();
	$myToolbar->addItem('settings','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/settings.png','Settings');
	$myToolbar->addItem('fullscreen','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/fullScreen.png','Full Screen','',1);
	addListenerServiceCall('fullResized','xenonx','resizedbrowser');
	
	// General Splitter
    
	// Box Contacts List
	$boxContacts = new Box(array(
		'name' => 'xenonAddressBook_boxContacts',
		'father' => 'xenonAddressBook_WND_Content',
		'x' => 6,
		'y' => 64,
		'height' => $mainWindow->height - 93,
		'width' => 300,
		'title' => 'Contacts'
	));
	$boxContacts->show(0);
	
	$txtSearch = new Textbox(array(
		'name' => 'xenonAddressBook_txtSearch',
		'father' => 'xenonAddressBook_boxContacts',
		'x' => 10,
		'y' => 64,
		'width' => 255
	));
	$txtSearch->show();

	xenonx('rawjs',array('js' => '
		var searchDelay;
	'));

	$txtSearch->addEvent('onkeyup',
		'clearTimeout(searchDelay);
		searchDelay=setTimeout(\'sendMsg('.$checknum.',"search",eyeParam("value",xGetElementById("'.$myPid.'_xenonAddressBook_txtSearch").value)+eyeParam("group",xGetElementById("'.$myPid.'_xenonAddressBook_selectGroup").value))\',1000);'
	);

	$imgSearch = new Imagebox(array(
		'name' => 'xenonAddressBook_imgSearch',
		'father' => 'xenonAddressBook_boxContacts',
		'x' => 10,
		'horiz' => 1,
		'y' => 64,
		'url' => 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/16x16/search.png'
	));
	$imgSearch->show();
	
	// Box Details Information
	$boxInfo = new Box(array(
		'name' => 'xenonAddressBook_boxInfo',
		'father' => 'xenonAddressBook_WND_Content',
		'x' => $boxContacts->width + 12,
		'y' => 64,
		'height' => $mainWindow->height - 93,
		'width' => $mainWindow->width - 320,
		'title' => 'Details'
	));
	$boxInfo->show(0);

	xenonAddressBook_initFunction();
}

function xenonAddressBook_initFunction() {
	$config = xenonAddressBook('loadConfig');
	if ($config['config'][0]['used'][0] == 0) {
		xenonAddressBook('importFromxenonContacts');
		$config['config'][0]['used'][0] = 1;
		$path = um('getCurrentUserDir').CONF_USER_DIR.'/xenonAddressBook';
		xenonXML('setXMLfile', array($path.'/config.xml', $config));
	}
	xenonAddressBook_showSelectGroup();
    $contacts = xenonAddressBook('getContacts');

    xenonAddressBook_drawListBox($contacts);
	
	// Show the new contact form
	xenonAddressBook_on_newContact();
}

function xenonAddressBook_drawListBox($contacts=null) {
    if (is_object($GLOBALS['xenonAddressBook_listBox'])) {
        $GLOBALS['xenonAddressBook_listBox']->remove();
    }
	
	if ($contacts == null) {
		$contacts['Contacts'][0] = array();
	}
    global $checknum;
    global $myPid;
	
    $listBox = new Simplebox(array(
        'name' => 'xenonAddressBook_listBox',
        'father' => 'xenonAddressBook_boxContacts',
        'x' => 10,
        'y' => 95,
        'height' => 306,
        'width' => 291,
        'border' => 0
    ));
    $listBox->show(0);
	
    xenonx('rawjs',array('js' => 'xGetElementById("'.$myPid.'_xenonAddressBook_listBox_Container").style.overflowY = "auto";
        xGetElementById("'.$myPid.'_xenonAddressBook_listBox_Container").style.overflowX = "hidden";'));

    $contacts = $contacts['Contacts'][0];
    $y = 2;
    $count = 0;
	if (!is_array($contacts)) {
		$contacts = array();
	}
	uksort($contacts, 'xenonAddressBook_sortContacts');
    foreach ($contacts as $key=>$contact) {
		$key = /* utf8 */ substr($key, 3);
        $chkContact = new Checkbox(array(
            'name' => 'xenonAddressBook_chkContact_'.$key,
            'father' => 'xenonAddressBook_listBox',
            'text' => '',
            'x' => 4,
            'y' => $y
        ));
        $chkContact->show();
        $lblContact = new Label(array(
            'name' => 'xenonAddressBook_lblContact_'.$count,
            'father' => 'xenonAddressBook_listBox',
            'text' => $contact[0]['home'][0]['name'][0].' '.$contact[0]['home'][0]['surname'][0],
            'x' => 28,
            'y' => $y+3
        ));
        $lblContact->show();
        $lblContact->setCSS(array(
            'cursor' => 'pointer'
        ));
        $lblContact->addEvent('onclick','sendMsg(' . $checknum . ',"viewContact",eyeParam("id","'.$key.'"));');
        $y+=25;
        ++$count;
    }
}

function xenonAddressBook_sortContacts($a, $b) {
	return utf8_strcasecmp($a[0]['home'][0]['surname'][0] . ', ' . $a[0]['home'][0]['name'][0], $b[0]['home'][0]['surname'][0] . ', ' . $b[0]['home'][0]['name'][0]);
}

function xenonAddressBook_showSelectGroup() {
	global $checknum;
	global $myPid;
	if (is_object($GLOBALS['xenonAddressBook_selectGroup'])) {
		$GLOBALS['xenonAddressBook_selectGroup']->remove();
	}
	$selectGroup = new Select(array(
		'name' => 'xenonAddressBook_selectGroup',
		'father' => 'xenonAddressBook_boxContacts',
		'x' => 10,
        'width' => 170,
		'y' => 34
	));
	$selectGroup->show(0);
	$selectGroup->addOption('All Groups', 0, 1);
	$groups = xenonAddressBook('getGroups');
    if (is_array($groups['groups'][0]['group'])) {
        $groups = $groups['groups'][0]['group'];
        foreach($groups as $igroup) {
            $selectGroup->addOption($igroup['name'][0], $igroup['id'][0]);
        }
    }
    $selectGroup->addEvent('onchange','sendMsg('.$checknum.',"search",eyeParam("value",xGetElementById("'.$myPid.'_xenonAddressBook_txtSearch").value)+eyeParam("group",xGetElementById("'.$myPid.'_xenonAddressBook_selectGroup").value));');
}

function xenonAddressBook_end($params=null) {
    xenonAddressBook('clean'); // This function delete all xenonAddressBook generated files in temp dir
	removeListenerServiceCall('xenonx','resizedbrowser');
	eyeWidgets('unserialize');
}


?>