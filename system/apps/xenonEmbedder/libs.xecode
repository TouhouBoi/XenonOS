<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function xenonEmbedder_lib_CreateIconsPath($path) {
	$path .= '/' . EXTERN_DIR;
	vfs('real_mkDir', array($path));
	
	$path .= '/' . APP_DIR;
	vfs('real_mkDir', array($path));
	
	$path .= '/xenonx';
	vfs('real_mkDir', array($path));
	
	$path .= '/themes';
	vfs('real_mkDir', array($path));
	
	$path .= '/default';
	vfs('real_mkDir', array($path));
	
	$path .= '/icons';
	vfs('real_mkDir', array($path));
	
	vfs('real_mkDir', array($path . '/48x48'));
	vfs('real_mkDir', array($path . '/22x22'));
	
	return $path;
}

function xenonEmbedder_lib_GetCategories() {
	$categories = array();
	
	foreach (vfs('real_getDirContent', array(XENONOS_ROOT . '/' . APP_DIR)) as $path) {
		if (is_dir($path)) {
			$xml = getAppInfo($path);
			$xml = is_array($xml) ? $xml['package'][0] : null;
			
			if (is_array($xml) && ($xml['type'][0] === 'Application' || $xml['type'][0] === 'Widget') && array_search($xml['category'][0], $categories) === false) {
				$categories[] = $xml['category'][0];
			}
		}
	}
	
	natcasesort($categories);
	
	return $categories;
}

function xenonEmbedder_lib_GetIcons() {
	$icons = array();
	
	$path = xenonx('getThemeImage', array('icons/48x48', 2));
	foreach (vfs('real_getDirContent', array($path, '*.png')) as $file) {
		if (is_file($file)) {
			$icons[] = basename($file, '.png');
		}
	}
	
	return $icons;
}

function xenonEmbedder_lib_GetValues() {
	$applicationName = $GLOBALS['xenonEmbedder_Textbox_ApplicationName']->text;
	
	return array(
		'ApplicationAuthor' => $GLOBALS['xenonEmbedder_Textbox_ApplicationAuthor']->text,
		'ApplicationCategory' => $GLOBALS['xenonEmbedder_Select_ApplicationCategory']->selected,
		'ApplicationDescription' => $GLOBALS['xenonEmbedder_Textbox_ApplicationDescription']->text,
		'ApplicationIcon' => 'index.php?theme=USERTHEME&extern=icons/48x48/' . $applicationName . '.png',
		'ApplicationLicense' => $GLOBALS['xenonEmbedder_Textbox_ApplicationLicense']->text,
		'ApplicationName' => $applicationName,
		'ApplicationType' => $GLOBALS['xenonEmbedder_Select_ApplicationType']->selected,
		'ApplicationVersion' => $GLOBALS['xenonEmbedder_Textbox_ApplicationVersion']->text,
		'Address' => $GLOBALS['xenonEmbedder_Textbox_Address']->text,
		'DefaultHeight' => $GLOBALS['xenonEmbedder_Checkbox_DefaultHeight']->checked ? intval($GLOBALS['xenonEmbedder_Textbox_DefaultHeight']->text) : null,
		'DefaultWidth' => $GLOBALS['xenonEmbedder_Checkbox_DefaultWidth']->checked ? intval($GLOBALS['xenonEmbedder_Textbox_DefaultWidth']->text) : null,
		'Title' => $GLOBALS['xenonEmbedder_Textbox_Title']->text,
		'StartMaximized' => $GLOBALS['xenonEmbedder_Textbox_StartMaximized']->checked
	);
}

function xenonEmbedder_lib_ResizeIcon($oldPath, $newPath, $width, $height = null) {
	include_once XENONOS_ROOT . '/' . SYSTEM_DIR . '/lib/xenonFiles/images' . XE_CODE_EXTENSION;
	
	if ($height === null) {
		$height = $width;
	}
	
	// Load old image
	$oldImage = images_imagecreatefromfile($oldPath);
	if ($oldImage === false) {
		return false;
	}
	
	// Resize and save new image
	$newImage = images_Resize($oldImage, $width, $height);
	imagepng($newImage, $newPath);
	
	// Destroy both images
	imagedestroy($oldImage);
	imagedestroy($newImage);
	
	return true;
}

function xenonEmbedder_lib_ValidateApplicationName($applicationName, $showMessage = true) {
	if (preg_match('/^[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*$/', $applicationName) === 1 && $applicationName !== '') {
		return true;
	}
	
	if ($showMessage) {
		xenonx('messageBox', array('content' => 'Invalid Technical Name!'));
	}
	return false;
}
?>