<?php
/*
##     ## ######## ##    ##  #######  ##    ##  #######   ######
 ##   ##  ##       ###   ## ##     ## ###   ## ##     ## ##    ##
  ## ##   ##       ####  ## ##     ## ####  ## ##     ## ##
   ###    ######   ## ## ## ##     ## ## ## ## ##     ##  ######
  ## ##   ##       ##  #### ##     ## ##  #### ##     ##       ##
 ##   ##  ##       ##   ### ##     ## ##   ### ##     ## ##    ##
##     ## ######## ##    ##  #######  ##    ##  #######   ######


XenonOS is a fork of the oneye project.
XenonOS Copyright © 2019 Trinity (touhouboi@protonmail.com)

Original Copyright
------------------------------------------
https://oneye-project.org
Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)

*/

include_once(XENONOS_ROOT.'/'.APP_DIR.'/xenonDialog/app'.XE_CODE_EXTENSION);
include_once(XENONOS_ROOT.'/'.APP_DIR.'/xenonDialog/func'.XE_CODE_EXTENSION);

function xenonDialog_on_initComplete($params=null) {
	xenonDialog_drawFoldersTree();
	$dialogParams = unserialize($GLOBALS['serialized_dialogParams_HID']->text);
	xenonDialog_browseHome($dialogParams[5]);
	xenonDialog_selectTreeFolder($dialogParams[5]);
}


//HOME BUTTON
function xenonDialog_on_places_home_BTN($params=null) {
	$GLOBALS['currentPlace_HID']->setText(__XENONDIALOG_PLACE_HOME);
	xenonDialog_browseHome('/');
	xenonDialog_drawFoldersTree();
}
//GROUPS BUTTON
function xenonDialog_on_places_groups_BTN($params=null) {
	xenonx('messageBox',array('content'=> 'Not available yet'));
	/*$GLOBALS['currentPlace_HID']->setText(__XENONDIALOG_PLACE_GROUPS);
	$GLOBALS['currentGroup_HID']->setText('');
	xenonDialog_browseGroups('/');
	xenonDialog_drawFoldersTree();*/
}

function xenonDialog_on_foldersRefresh_IMG($params=null) {
	xenonDialog_drawFoldersTree();
}

//FOLDERS TREE CLICK
function xenonDialog_on_folders_TREE($params=null) {
	switch($GLOBALS['currentPlace_HID']->text) {
		case __XENONDIALOG_PLACE_GROUPS:
			//TODO
			/*$selectedPath = substr($params['folders_TREE'][0], strlen(i18n('translate', array(__XENONDIALOG_FOLDERSTREE_ROOTNODE_GROUPS)))); // utf8
			$selectedPath = xenonDialog_getFormatedDirPath($selectedPath);
			$groupname = '';

			//if a group has been selected (not the root node)
			if ($selectedPath != '/') {
				$groupname = substr($selectedPath, 1, strpos($selectedPath, '/', 2) - 1); // utf8
				$GLOBALS['currentGroup_HID']->setText($groupname);
				$selectedPath = substr($selectedPath, strlen($groupname) + 1); // utf8
				$selectedPath = xenonDialog_resolvePathInGroupsDir($selectedPath, false, $groupname);
			}
			xenonDialog_browseGroups($selectedPath, $groupname);*/
			break;

		default:
			$selectedPath = substr($params['folders_TREE'][0], strlen(i18n('translate', array(__XENONDIALOG_FOLDERSTREE_ROOTNODE_HOME)))); // utf8
			xenonDialog_browseHome($selectedPath);
			break;
	}
}

//FILES TABLE CLICK
function xenonDialog_on_files_TAB_click($params=null) {
	$dialogParams = unserialize($GLOBALS['serialized_dialogParams_HID']->text);
	$currentPath = $GLOBALS['currentPath_HID']->text;
	$selectedFileId = unserialize(urldecode($GLOBALS['files_TAB']->selected));

	if ($dialogParams[0] != XENONDIALOG_TYPE_SELECTFOLDER) {
		if ($selectedFileId[0] != 'd') {
			$GLOBALS['filename_TXTBOX']->setText(xenonDialog_autoSetExtensionToFilename(basename($selectedFileId[1])));
		}
	}
	else {
		if (basename($selectedFileId[1]) != '..') {
			$GLOBALS['filename_TXTBOX']->setText('');
		}
	}
}

//FILES TABLE CLICK
function xenonDialog_on_files_TAB_dblClick($params=null) {
	$dialogParams = unserialize($GLOBALS['serialized_dialogParams_HID']->text);
	$currentPath = $GLOBALS['currentPath_HID']->text;
	$selectedFileId = unserialize(urldecode($GLOBALS['files_TAB']->selected));

	switch($GLOBALS['currentPlace_HID']->text) {
		case __XENONDIALOG_PLACE_GROUPS:
			//TODO
			/*$groupname = $selectedFileId[2];
			$path = xenonDialog_resolvePathInGroupsDir($currentPath.'/'.basename($selectedFileId[1]), true, $groupname);
			if ($path === false) {
				$path = '/';
			}
			xenonDialog_browseGroups($path, $groupname);*/
			break;
		default:
			if ($selectedFileId[0] == 'd') {
				xenonDialog_browseHome(xenonDialog_getFormatedDirPath($currentPath.'/'.basename($selectedFileId[1])));
				xenonDialog_selectTreeFolder($selectedFileId[1]);

				if ($dialogParams[0] == XENONDIALOG_TYPE_SELECTFOLDER) {
					$GLOBALS['filename_TXTBOX']->setText('');
				}
			}
			elseif ($selectedFileId[0] != 'l') {
				//TODO
			}
			break;
	}
}

//FILENAME TEXTBOX
function xenonDialog_on_filename_TXTBOX_change($params=null) {
	//nothing to do
}

//FILETYPE SELECTOR
function xenonDialog_on_filetype_SEL_change($params=null) {
	$myHiddenFileType = new Hidden(array(
		'name' => 'selectedFileType',
		'father' => 'xenonDialog_WND_Content',
		'text' => $params['filetype'][0]
	));
	eyeWidgets('serialize',array($myHiddenFileType));
	$GLOBALS['currentFiletypeFilter_HID']->setText($params['filetype'][0]);
	if ($GLOBALS['filename_TXTBOX']->text) {
		$GLOBALS['filename_TXTBOX']->setText(xenonDialog_autoSetExtensionToFilename($GLOBALS['filename_TXTBOX']->text, true));
	}
	xenonDialog_refreshFilesList();
}

//Notify xenonDialog is going to be closed to the application which launched it
function xenonDialog_on_closingNotification(){
	$dialogParams = unserialize($GLOBALS['serialized_dialogParams_HID']->text);
	$trimd = /* utf8 */ trim($dialogParams[7]);
	if(!empty($trimd)){
		$cancelCallback = $dialogParams[7];
		$callback_checknum = $dialogParams[2];
		if($cancelCallback && $callback_checknum) {
			xenonx('rawjs',array('js'=>'sendMsg('.$callback_checknum.',"'.$cancelCallback.'",eyeParam("CanceledByUser","'.'1'.'"));'));
		}
	}
}

//OK BUTTON (could be "open" or "select" or "save" according to the type of the dialog)
function xenonDialog_on_ok_BTN($params=null) {
	//xenonx('messageBox',array('content'=> $GLOBALS['files_TAB']->selected));
	$dialogParams = unserialize($GLOBALS['serialized_dialogParams_HID']->text);
	$filename = $GLOBALS['filename_TXTBOX']->text;

	$dirContent = xenonDialog_listDir($GLOBALS['currentPath_HID']->text);
	$selectedFileInfo = null;
	foreach($dirContent as $fileInfo) {
		if (utf8_strtolower($fileInfo['name']) === utf8_strtolower($filename)) {
			$selectedFileInfo = $fileInfo;
		}
	}

	switch($dialogParams[0]) {
		case XENONDIALOG_TYPE_OPENFILE:
			if (is_null($selectedFileInfo)) {
				xenonx('messageBox',array('content'=> i18n("translate",array('You must select a file'))));
				return;
			}
			if ($selectedFileInfo['type'] == 'd') {
				xenonDialog_browseHome($selectedFileInfo['path']);
				$GLOBALS['filename_TXTBOX']->setText('');
			}
			else {
				xenonDialog_openFile($GLOBALS['currentPath_HID']->text, $selectedFileInfo['name']);
			}
			break;

		case XENONDIALOG_TYPE_SELECTFOLDER:
			xenonDialog_selectFolder(xenonDialog_resolvePath($GLOBALS['currentPath_HID']->text));
			break;

		case XENONDIALOG_TYPE_SAVEFILE:
			//existing file selected
			if (!is_null($selectedFileInfo)) {
				//folder
				if ($selectedFileInfo['type'] == 'd') {
					xenonDialog_browseHome($selectedFileInfo['path']);
				}
				else {
					xenonDialog_saveAs($GLOBALS['currentPath_HID']->text,$filename);
				}
			}
			else {
				if ( /* utf8 */ strlen($filename) === 0) {
					xenonx('messageBox',array('content'=> i18n("translate",array('You must enter a name'))));
				}
				else {
					xenonDialog_saveAs($GLOBALS['currentPath_HID']->text,$filename);
				}
			}
			break;
	}
}

//CANCEL BUTTON
function xenonDialog_on_cancel_BTN($params=null) {
	xenonDialog_on_closingNotification();
	xenonDialog_on_Close();
}

//REPLACE FILE DIALOG CONFIRMATION
function xenonDialog_on_confirmFileReplace_DLG_yes_BTN($params=null) {
	$params = unserialize($GLOBALS['confirmFileReplace_DLG_params_HID']->text);
	$GLOBALS['confirmFileReplace_DLG']->close();
	xenonDialog_saveAs($params[0], $params[1], true);
}
function xenonDialog_on_confirmFileReplace_DLG_no_BTN($params=null) {
	$GLOBALS['confirmFileReplace_DLG']->close();
}



//SYSTEM EVENTS
function xenonDialog_on_Message($params="") {
	eyeWidgets('updateContent',$params);
}

function xenonDialog_on_Close(){
	xenonDialog_on_closingNotification();
	proc('end');
}

?>