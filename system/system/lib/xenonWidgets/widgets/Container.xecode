<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

/*
	Container widget abstraction
*/

class Container {
	//pid controller

	var $creatorPid;
	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;
	var $visible;
	var $removepid;

	var $showed = 0;

	//custom widget options
	var $width;
	var $height;
	var $unit;

	function __construct($params) {
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		$this->father = $params['father'];

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 20;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 20;
		isset($params['visible'])? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['removepid'])? $this->removepid = $params['removepid'] : $this->removepid = 0;

		//especific window options
		isset($params['unit']) ? $this->unit = $params['unit'] : $this->unit = 'px';
		isset($params['width']) ? $this->width = $params['width'] : $this->width = -1;
		isset($params['height']) ? $this->height = $params['height'] : $this->height = -1;
	}

	//event handling
	function addEvent($eventName,$eventFunc,$args="") {
		global $myPid;
		$name = $myPid.'_'.$this->name;
		if($this->showed == 0) {
			$this->show();
		}
		xenonx('addEvent',array('name' => $name, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}

	function show($noserialize = 0) {
		$widgetsparams = array(
			'height' => $this->height,
			'width' => $this->width,
			'visible' => $this->visible,
			'unit' => $this->unit,
		);
		$widgetsparams = mmap('array2js',array($widgetsparams));

		$myContainer = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Container',
			'params' => $widgetsparams,
			'center' => $this->cent,
			'removepid' => $this->removepid
		);
		$this->showed=1;
		xenonx('createWidget',$myContainer);
		if ($noserialize == 0) {
			xenonWidgets('serialize', array($this));
		}
	}


	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				xenonx('updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}

	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}

	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}

	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}

	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}

	function hide() {
		global $myPid;
		$this->visible = 0;
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}

	function unhide() {
		global $myPid;
		$this->visible = 1;
		xenonx('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}

	function addContent($content) {
		global $myPid;
		xenonx('runjs', array('js' => 'document.getElementById("' . $myPid . '_' . $this->name . '").innerHTML += %s;', 'tokens' => array($content)));
	}

	function setContent($content) {
		global $myPid;
		$tokens[] = $content;
		xenonx('runjs',array('js'=>'document.getElementById("'.$myPid.'_'.$this->name.'").innerHTML= %s ;','tokens'=>$tokens));
	}

	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		xenonx('removeWidget',array('name'=>$name));
		xenonWidgets('singleUnserialize',array($this->name));
	}
}
?>